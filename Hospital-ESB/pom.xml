<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.microintegrator.projects</groupId>
  <artifactId>Hospital-ESB</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>
  <name>Hospital-ESB</name>
  <description>Hospital-ESB</description>
  
  <repositories>
    <repository>
      <id>wso2-nexus</id>
      <name>WSO2 internal Repository</name>
      <url>https://maven.wso2.org/nexus/content/groups/wso2-public/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
    </repository>
    <repository>
      <id>wso2.releases</id>
      <name>WSO2 internal Repository</name>
      <url>https://maven.wso2.org/nexus/content/repositories/releases/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
    </repository>
    <repository>
      <id>wso2.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>https://maven.wso2.org/nexus/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>wso2.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>https://maven.wso2.org/nexus/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>ignore</checksumPolicy>
      </releases>
      <id>wso2-nexus</id>
      <url>https://maven.wso2.org/nexus/content/groups/wso2-public/</url>
    </pluginRepository>
  </pluginRepositories>
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.5.0</version>
            <executions>
              <execution>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/deployment/libs</outputDirectory>
                  <excludeTransitive>true</excludeTransitive>
                  <excludeGroupIds>org.apache.synapse,org.apache.axis2</excludeGroupIds>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.11.0</version>
            <configuration>
              <source>17</source>
              <target>17</target>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.wso2.maven</groupId>
            <artifactId>vscode-car-plugin</artifactId>
            <version>5.2.75</version>
            <extensions>false</extensions>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>car</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <version>2.5.2</version>
            <executions>
              <execution>
                <id>install-car</id>
                <phase>compile</phase>
                <goals>
                  <goal>install-file</goal>
                </goals>
                <configuration>
                  <packaging>car</packaging>
                  <artifactId>${project.artifactId}</artifactId>
                  <groupId>${project.groupId}</groupId>
                  <version>${project.version}</version>
                  <file>${project.build.directory}/${project.artifactId}_${project.version}.car</file>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>default-jar</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classifier>a</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin> 
        </plugins>
      </build>
      <properties>
        <server.type>local</server.type>
        <server.host>localhost</server.host>
        <server.port>9008</server.port>
        <server.path>/</server.path>
        <server.version>${project.runtime.version}</server.version>
        <server.download.link>${testServerDownloadLink}</server.download.link>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <build></build>
      <properties>
        <server.type>${testServerType}</server.type>
        <server.host>${testServerHost}</server.host>
        <server.port>${testServerPort}</server.port>
        <server.path>${testServerPath}</server.path>
      </properties>
    </profile>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-compile</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>default-jar</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <classifier>my</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin> 
          <plugin>
            <groupId>org.wso2.maven</groupId>
            <artifactId>vscode-car-plugin</artifactId>
            <version>5.2.75</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>car</goal>
                </goals>
                <configuration></configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.5.0</version>
            <executions>
              <execution>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/deployment/libs</outputDirectory>
                  <excludeTransitive>true</excludeTransitive>
                  <excludeGroupIds>org.apache.synapse,org.apache.axis2</excludeGroupIds>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.wso2.maven</groupId>
            <artifactId>mi-container-config-mapper</artifactId>
            <version>5.2.75</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>config-mapper-parser</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>config-mapper-parser</goal>
                </goals>
                <configuration>
                  <miVersion>${project.runtime.version}</miVersion>
                  <executeCipherTool>${ciphertool.enable}</executeCipherTool>
                  <keystoreName>${keystore.name}</keystoreName>
                  <keystoreAlias>${keystore.alias}</keystoreAlias>
                  <keystoreType>${keystore.type}</keystoreType>
                  <keystorePassword>${keystore.password}</keystorePassword>
                  <projectLocation>${project.basedir}</projectLocation>
                </configuration>
              </execution>
            </executions>
            <configuration></configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>antrun-edit</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy todir="${basedir}/target/tmp_docker/CompositeApps">
                      <fileset dir="${basedir}/target">
                        <include name="*.car"></include>
                      </fileset>
                    </copy>
                  </target>
                </configuration>
              </execution>
            </executions>
            <configuration></configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.45.0</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>docker-build</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <images>
                    <image>
                      <name>${project.artifactId}:${project.version}</name>
                      <build>
                        <from>${dockerfile.base.image}</from>
                        <dockerFile>${basedir}/target/tmp_docker/Dockerfile</dockerFile>
                        <args>
                          <BASE_IMAGE>${dockerfile.base.image}</BASE_IMAGE>
                        </args>
                        <useDefaultExcludes>false</useDefaultExcludes>
                      </build>
                    </image>
                  </images>
                  <authConfig>
                    <username>${dockerfile.pull.username}</username>
                    <password>${dockerfile.pull.password}</password>
                  </authConfig>
                  <verbose>true</verbose>
                </configuration>
              </execution>
            </executions>
            <configuration></configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <server.type>local</server.type>
        <server.host>localhost</server.host>
        <server.port>9008</server.port>
        <server.path>/</server.path>
        <server.version>${project.runtime.version}</server.version>
        <server.download.link>${testServerDownloadLink}</server.download.link>
      </properties>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <groupId>org.wso2.maven</groupId>
        <artifactId>synapse-unit-test-maven-plugin</artifactId>
        <version>5.2.75</version>
        <executions>
          <execution>
            <id>synapse-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>synapse-unit-test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <server>
            <testServerType>${server.type}</testServerType>
            <testServerHost>${server.host}</testServerHost>
            <testServerPort>${server.port}</testServerPort>
            <testServerPath>${server.path}</testServerPath>
            <testServerVersion>${server.version}</testServerVersion>
            <testServerDownloadLink>${server.download.link}</testServerDownloadLink>
          </server>
          <testCasesFilePath>${project.basedir}/src/test/wso2mi/${testFile}</testCasesFilePath>
          <mavenTestSkip>${maven.test.skip}</mavenTestSkip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <properties>
    <projectType>integration-project</projectType>
    <uuid>a5be966e-36ed-4d74-adf0-06097abac48e</uuid>
    <keystore.type>JKS</keystore.type>
    <keystore.name>wso2carbon.jks</keystore.name>
    <keystore.password>wso2carbon</keystore.password>
    <keystore.alias>wso2carbon</keystore.alias>
    <ciphertool.enable>true</ciphertool.enable>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.scm.id>integration-project</project.scm.id>
    <project.runtime.version>4.3.0</project.runtime.version>
    <dockerfile.base.image>wso2/wso2mi:${project.runtime.version}</dockerfile.base.image>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.apache.synapse</groupId>
      <artifactId>synapse-core</artifactId>
      <version>4.0.0-wso2v20</version>
    </dependency>
  </dependencies>
</project>
